{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"sensorutils Welcome! This is the documentation for sensorutils v0.12.0 , last updated June 11, 2021. For users Installation sensorutils\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002 Quickstart \u3068\u308a\u3042\u3048\u305a\u4f7f\u3063\u3066\u307f\u308b\u3002 Reference sensorutils\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 For developers \u30d0\u30b0\u306e\u5831\u544a\u3084\u6a5f\u80fd\u306e\u8ffd\u52a0\u306f Github\u306eIssue \u306b\u6295\u7a3f\u3059\u308b\u304b \u958b\u767a\u30e1\u30f3\u30d0\u30fc\u306b\u76f4\u63a5\u5831\u544a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u4f5c\u6210\u3057\u3066\u304f\u308c\u308b\u4eba\u52df\u96c6\u4e2d Acknowledgements","title":"Home"},{"location":"index.html#sensorutils","text":"Welcome! This is the documentation for sensorutils v0.12.0 , last updated June 11, 2021.","title":"sensorutils"},{"location":"index.html#for-users","text":"","title":"For users"},{"location":"index.html#installation","text":"sensorutils\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002","title":"Installation"},{"location":"index.html#quickstart","text":"\u3068\u308a\u3042\u3048\u305a\u4f7f\u3063\u3066\u307f\u308b\u3002","title":"Quickstart"},{"location":"index.html#reference","text":"sensorutils\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9","title":"Reference"},{"location":"index.html#for-developers","text":"\u30d0\u30b0\u306e\u5831\u544a\u3084\u6a5f\u80fd\u306e\u8ffd\u52a0\u306f Github\u306eIssue \u306b\u6295\u7a3f\u3059\u308b\u304b \u958b\u767a\u30e1\u30f3\u30d0\u30fc\u306b\u76f4\u63a5\u5831\u544a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u4f5c\u6210\u3057\u3066\u304f\u308c\u308b\u4eba\u52df\u96c6\u4e2d","title":"For developers"},{"location":"index.html#acknowledgements","text":"","title":"Acknowledgements"},{"location":"debug.html","text":"DEBUG PAGE \u30c7\u30d0\u30c3\u30b0\u30da\u30fc\u30b8 MathJax One-line \u5f0f \\(H(p, q) = - \\sum^{D-1}_{i=0}{p_i \\log{q_i}}\\) \u306f\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3067\u3059\uff0e 1 \u5f0f $ H ( p, q ) = - \\sum ^{D - 1 }_{i = 0 }{p_i \\log {q_i}} $ \u306f\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3067\u3059\uff0e Multi-line \u30ac\u30a6\u30b9\u7a4d\u5206 \\[ \\int^{\\infty}_{-\\infty}{e^{-\\alpha x^2} dx} = \\sqrt{\\frac{\\pi}{\\alpha}} \\] 1 2 3 $$ \\int ^{ \\infty }_{ - \\infty }{e^{ - \\alpha x^ 2 } dx} = \\sqrt { \\frac { \\pi }{ \\alpha }} $$ \u7d75\u6587\u5b57 \u6ce8\u91c8 \u30b5\u30f3\u30d7\u30eb 1 Note\u3084Warning Note \u3053\u308c\u306f\u30ce\u30fc\u30c8\u3067\u3059\u3002 Tip \u30d2\u30f3\u30c8\u3067\u3059\u3002 Warning \u3053\u308c\u306f\u8b66\u544a\u3067\u3059 Danger \u3053\u308c\u306f\u5371\u967a\u3067\u3059\u3002 Success \u3053\u308c\u306f\u6210\u529f\u3067\u3059\u3002 Failure \u3053\u308c\u306f\u5931\u6557\u3067\u3059\u3002 Bug \u3053\u308c\u306f\u30d0\u30b0\u3067\u3059\u3002 Summary \u3053\u308c\u306f\u6982\u8981\u3067\u3059\u3002 sample \u21a9","title":"DEBUG PAGE"},{"location":"debug.html#debug-page","text":"\u30c7\u30d0\u30c3\u30b0\u30da\u30fc\u30b8","title":"DEBUG PAGE"},{"location":"debug.html#mathjax","text":"","title":"MathJax"},{"location":"debug.html#one-line","text":"\u5f0f \\(H(p, q) = - \\sum^{D-1}_{i=0}{p_i \\log{q_i}}\\) \u306f\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3067\u3059\uff0e 1 \u5f0f $ H ( p, q ) = - \\sum ^{D - 1 }_{i = 0 }{p_i \\log {q_i}} $ \u306f\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3067\u3059\uff0e","title":"One-line"},{"location":"debug.html#multi-line","text":"\u30ac\u30a6\u30b9\u7a4d\u5206 \\[ \\int^{\\infty}_{-\\infty}{e^{-\\alpha x^2} dx} = \\sqrt{\\frac{\\pi}{\\alpha}} \\] 1 2 3 $$ \\int ^{ \\infty }_{ - \\infty }{e^{ - \\alpha x^ 2 } dx} = \\sqrt { \\frac { \\pi }{ \\alpha }} $$","title":"Multi-line"},{"location":"debug.html#_1","text":"","title":"\u7d75\u6587\u5b57"},{"location":"debug.html#_2","text":"\u30b5\u30f3\u30d7\u30eb 1","title":"\u6ce8\u91c8"},{"location":"debug.html#notewarning","text":"Note \u3053\u308c\u306f\u30ce\u30fc\u30c8\u3067\u3059\u3002 Tip \u30d2\u30f3\u30c8\u3067\u3059\u3002 Warning \u3053\u308c\u306f\u8b66\u544a\u3067\u3059 Danger \u3053\u308c\u306f\u5371\u967a\u3067\u3059\u3002 Success \u3053\u308c\u306f\u6210\u529f\u3067\u3059\u3002 Failure \u3053\u308c\u306f\u5931\u6557\u3067\u3059\u3002 Bug \u3053\u308c\u306f\u30d0\u30b0\u3067\u3059\u3002 Summary \u3053\u308c\u306f\u6982\u8981\u3067\u3059\u3002 sample \u21a9","title":"Note\u3084Warning"},{"location":"install.html","text":"Installation sensorutils\u306fpip\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u3067\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 Requirements python 3.x numpy pandas scipy Pip \u6700\u65b0\u7248\u306f\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 \u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f \u3053\u3061\u3089 \u3092\u53c2\u7167 1 pip install git+https://github.com/haselab-dev/sensorutils \u7384\u4eba\u5411\u3051 \u7279\u5b9a\u306e\u30d6\u30e9\u30f3\u30c1\u3084\u30bf\u30b0\u3092\u6307\u5b9a\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5834\u5408 1 pip install git+https://github.com/haselab-dev/sensorutils@ { \u30d6\u30e9\u30f3\u30c1\u540d | \u30bf\u30b0\u540d } Conda Feature working... Warning \u73fe\u5728\u306e\u30d0\u30fc\u30b8\u30e7\u30f3(v0.12.0)\u3067\u306f\u4e00\u5fdcconda\u3092\u901a\u3058\u305f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u53ef\u80fd\u3060\u304c\u3001 \u5834\u5408\u306b\u3088\u3063\u3066\u306f\u74b0\u5883\u304c\u58ca\u308c\u308b\u3053\u3068\u304c\u3042\u308b\u305f\u3081\u975e\u63a8\u5968 Uninstall \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u524a\u9664\u3059\u308b\u5834\u5408 Pip 1 pip uninstall sensorutils","title":"Installation"},{"location":"install.html#installation","text":"sensorutils\u306fpip\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u3067\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002","title":"Installation"},{"location":"install.html#requirements","text":"python 3.x numpy pandas scipy","title":"Requirements"},{"location":"install.html#pip","text":"\u6700\u65b0\u7248\u306f\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002 \u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f \u3053\u3061\u3089 \u3092\u53c2\u7167 1 pip install git+https://github.com/haselab-dev/sensorutils \u7384\u4eba\u5411\u3051 \u7279\u5b9a\u306e\u30d6\u30e9\u30f3\u30c1\u3084\u30bf\u30b0\u3092\u6307\u5b9a\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5834\u5408 1 pip install git+https://github.com/haselab-dev/sensorutils@ { \u30d6\u30e9\u30f3\u30c1\u540d | \u30bf\u30b0\u540d }","title":"Pip"},{"location":"install.html#conda","text":"Feature working... Warning \u73fe\u5728\u306e\u30d0\u30fc\u30b8\u30e7\u30f3(v0.12.0)\u3067\u306f\u4e00\u5fdcconda\u3092\u901a\u3058\u305f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u53ef\u80fd\u3060\u304c\u3001 \u5834\u5408\u306b\u3088\u3063\u3066\u306f\u74b0\u5883\u304c\u58ca\u308c\u308b\u3053\u3068\u304c\u3042\u308b\u305f\u3081\u975e\u63a8\u5968","title":"Conda"},{"location":"install.html#uninstall","text":"\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u524a\u9664\u3059\u308b\u5834\u5408","title":"Uninstall"},{"location":"install.html#pip_1","text":"1 pip uninstall sensorutils","title":"Pip"},{"location":"install_prev_ver.html","text":"Installation with previous version v0.11.0 1 pip install git+https://github.com/haselab-dev/sensorutils@v0.11.0","title":"Installation with previous version"},{"location":"install_prev_ver.html#installation-with-previous-version","text":"","title":"Installation with previous version"},{"location":"install_prev_ver.html#v0110","text":"1 pip install git+https://github.com/haselab-dev/sensorutils@v0.11.0","title":"v0.11.0"},{"location":"quickstart.html","text":"Quickstart 1. \u3068\u306b\u304b\u304fHASC\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u30ed\u30fc\u30c9\u3057\u3066\u307f\u308b HASC\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001 \u30a6\u30a3\u30f3\u30c9\u30a6\u5e45256\u3001\u30b9\u30c8\u30e9\u30a4\u30c9\u5e45256\u3067sliding-window\u51e6\u7406\u3057\u305f\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u3002 \u624b\u9806 HASC\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u53d6\u5f97\u3059\u308b \u4e0b\u8a18\u30b3\u30fc\u30c9\u306e hasc_path \u306e\u7b87\u6240\u3092\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30d1\u30b9\u306b\u66f8\u304d\u63db\u3048\u308b (Optional) 16\u884c\u76ee\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u4f5c\u6210\u3059\u308b\u30d1\u30b9\u3092\u5909\u66f4 \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5b9f\u884c\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4e0b\u306b hasc.csv \u3068\u3044\u3046\u540d\u524d\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u4f5c\u6210\u3055\u308c\u308b\u3002 \u5b9f\u884c! Warning \u521d\u56de\u306e\u5b9f\u884c\u3067\u306f\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u53ce\u96c6\u3068\u7d71\u5408\u306e\u51e6\u7406\u3092\u884c\u3046\u305f\u3081\u6642\u9593\u304c\u304b\u304b\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 import numpy as np from pathlib import Path from sensorutils.datasets.hasc import HASC # About HASC ## http://hasc.jp/ window_size = 256 # sliding-window\u3067\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u3068\u304d\u306ewindow\u5e45 stride = 256 # stride\u5e45 # HASC\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u30d1\u30b9 hasc_path = Path ( 'E:/<any where>/HASC-PAC2016/' ) # hasc\u30ed\u30fc\u30c0\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f5c\u6210 # \u7b2c2\u5f15\u6570\u306f\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u5148\u30d1\u30b9 hasc = HASC ( hasc_path , Path ( 'hasc.csv' )) x , y , act2id = hasc . load ( window_size , stride , ftrim = 2 * 100 , btrim = 2 * 100 ) print ( f 'x: { x . shape } ' ) print ( f 'y: { y . shape } ' ) 2. HASC\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u88ab\u9a13\u8005\u3067\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u8aad\u307f\u8fbc\u3080 \u624b\u9806\u306f1.\u3068\u540c\u3058 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 import numpy as np from pathlib import Path from sensorutils.datasets.hasc import HASC # About HASC ## http://hasc.jp/ window_size = 256 # sliding-window\u3067\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u3068\u304d\u306ewindow\u5e45 stride = 256 # stride\u5e45 # HASC\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u30d1\u30b9 hasc_path = Path ( 'E:/<any where>/HASC-PAC2016/' ) # hasc\u30ed\u30fc\u30c0\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f5c\u6210 # \u7b2c2\u5f15\u6570\u306f\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u5148\u30d1\u30b9 hasc = HASC ( hasc_path , Path ( 'hasc.csv' )) # \u30af\u30a8\u30ea\u306e\u4f5c\u6210 # \u3053\u306e6\u4eba\u306e\u88ab\u9a13\u8005\u306e\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf\u306e\u307f\u3092\u53d6\u5f97\u3059\u308b persons = [ 'person01068' , 'person03053' , 'person02033' , 'person01106' , 'person03079' , 'person02007' ] queries = { 'Person' : f 'Person in { persons } ' } # \u8aad\u307f\u8fbc\u307f x , y , act2id = hasc . load ( window_size , stride , queries = queries , ftrim = 2 * 100 , btrim = 2 * 100 ) print ( f 'x: { x . shape } ' ) print ( f 'y: { y . shape } ' )","title":"Quickstart"},{"location":"quickstart.html#quickstart","text":"","title":"Quickstart"},{"location":"quickstart.html#1-hasc","text":"HASC\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001 \u30a6\u30a3\u30f3\u30c9\u30a6\u5e45256\u3001\u30b9\u30c8\u30e9\u30a4\u30c9\u5e45256\u3067sliding-window\u51e6\u7406\u3057\u305f\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u3002 \u624b\u9806 HASC\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u53d6\u5f97\u3059\u308b \u4e0b\u8a18\u30b3\u30fc\u30c9\u306e hasc_path \u306e\u7b87\u6240\u3092\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30d1\u30b9\u306b\u66f8\u304d\u63db\u3048\u308b (Optional) 16\u884c\u76ee\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u4f5c\u6210\u3059\u308b\u30d1\u30b9\u3092\u5909\u66f4 \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5b9f\u884c\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4e0b\u306b hasc.csv \u3068\u3044\u3046\u540d\u524d\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u4f5c\u6210\u3055\u308c\u308b\u3002 \u5b9f\u884c! Warning \u521d\u56de\u306e\u5b9f\u884c\u3067\u306f\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u53ce\u96c6\u3068\u7d71\u5408\u306e\u51e6\u7406\u3092\u884c\u3046\u305f\u3081\u6642\u9593\u304c\u304b\u304b\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 import numpy as np from pathlib import Path from sensorutils.datasets.hasc import HASC # About HASC ## http://hasc.jp/ window_size = 256 # sliding-window\u3067\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u3068\u304d\u306ewindow\u5e45 stride = 256 # stride\u5e45 # HASC\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u30d1\u30b9 hasc_path = Path ( 'E:/<any where>/HASC-PAC2016/' ) # hasc\u30ed\u30fc\u30c0\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f5c\u6210 # \u7b2c2\u5f15\u6570\u306f\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u5148\u30d1\u30b9 hasc = HASC ( hasc_path , Path ( 'hasc.csv' )) x , y , act2id = hasc . load ( window_size , stride , ftrim = 2 * 100 , btrim = 2 * 100 ) print ( f 'x: { x . shape } ' ) print ( f 'y: { y . shape } ' )","title":"1. \u3068\u306b\u304b\u304fHASC\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u30ed\u30fc\u30c9\u3057\u3066\u307f\u308b"},{"location":"quickstart.html#2-hasc","text":"\u624b\u9806\u306f1.\u3068\u540c\u3058 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 import numpy as np from pathlib import Path from sensorutils.datasets.hasc import HASC # About HASC ## http://hasc.jp/ window_size = 256 # sliding-window\u3067\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u3068\u304d\u306ewindow\u5e45 stride = 256 # stride\u5e45 # HASC\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u30d1\u30b9 hasc_path = Path ( 'E:/<any where>/HASC-PAC2016/' ) # hasc\u30ed\u30fc\u30c0\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f5c\u6210 # \u7b2c2\u5f15\u6570\u306f\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u5148\u30d1\u30b9 hasc = HASC ( hasc_path , Path ( 'hasc.csv' )) # \u30af\u30a8\u30ea\u306e\u4f5c\u6210 # \u3053\u306e6\u4eba\u306e\u88ab\u9a13\u8005\u306e\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf\u306e\u307f\u3092\u53d6\u5f97\u3059\u308b persons = [ 'person01068' , 'person03053' , 'person02033' , 'person01106' , 'person03079' , 'person02007' ] queries = { 'Person' : f 'Person in { persons } ' } # \u8aad\u307f\u8fbc\u307f x , y , act2id = hasc . load ( window_size , stride , queries = queries , ftrim = 2 * 100 , btrim = 2 * 100 ) print ( f 'x: { x . shape } ' ) print ( f 'y: { y . shape } ' )","title":"2. HASC\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u88ab\u9a13\u8005\u3067\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u8aad\u307f\u8fbc\u3080"},{"location":"refs.html","text":"Reference sensorutils.core \u30bb\u30f3\u30b5\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u4e00\u822c\u7684\u306a\u64cd\u4f5c sensorutils.metrics \u8a55\u4fa1\u6307\u6a19 sensorutils.stats \u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u7d71\u8a08\u5024\u306e\u8a08\u7b97 sensorutils.augmentation \u30bb\u30f3\u30b5\u30c7\u30fc\u30bf\u5411\u3051\u306e\u30c7\u30fc\u30bf\u62e1\u5f35\u624b\u6cd5 sensorutils.datasets \u884c\u52d5\u8a8d\u8b58\u7cfb\u306e\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30ed\u30fc\u30c0","title":"References"},{"location":"refs.html#reference","text":"","title":"Reference"},{"location":"refs.html#sensorutilscore","text":"\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u4e00\u822c\u7684\u306a\u64cd\u4f5c","title":"sensorutils.core"},{"location":"refs.html#sensorutilsmetrics","text":"\u8a55\u4fa1\u6307\u6a19","title":"sensorutils.metrics"},{"location":"refs.html#sensorutilsstats","text":"\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u7d71\u8a08\u5024\u306e\u8a08\u7b97","title":"sensorutils.stats"},{"location":"refs.html#sensorutilsaugmentation","text":"\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf\u5411\u3051\u306e\u30c7\u30fc\u30bf\u62e1\u5f35\u624b\u6cd5","title":"sensorutils.augmentation"},{"location":"refs.html#sensorutilsdatasets","text":"\u884c\u52d5\u8a8d\u8b58\u7cfb\u306e\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30ed\u30fc\u30c0","title":"sensorutils.datasets"},{"location":"refs/augmentation.html","text":"sensorutils.augmentation Under construction...","title":"sensorutils.augmentation"},{"location":"refs/augmentation.html#sensorutilsaugmentation","text":"Under construction...","title":"sensorutils.augmentation"},{"location":"refs/core.html","text":"sensorutils.core Under construction... to_frames ( src , window_size , stride , stride_mode = 'index' ) np.ndarray \u3092\u30d5\u30ec\u30fc\u30e0\u5206\u3051\u3059\u308b\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u306a\u5b9f\u88c5\u3002 Parameters: Name Type Description Default src ndarray splited source. required window_size int sliding window size. required stride int stride is int more than 0. required stride_mode str 'index' or 'nptrick'. it is used to_frames_* method when window_size != stride. 'index' Returns: Type Description ndarray a shape of frames is (num_frames, window_size, *src.shape[1:]) , where num_frames is (src.shape[0] - window_size) // stride + 1 . to_frames_using_reshape ( src , window_size ) np.ndarray \u3092\u30d5\u30ec\u30fc\u30e0\u5206\u3051\u3059\u308b\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u306a\u5b9f\u88c5\u3002 \u5206\u5272\u306b reshape \u3092\u4f7f\u7528\u3002 Parameters: Name Type Description Default src ndarray splited source. required window_size int sliding window size. stride = window_size. required Returns: Type Description ndarray a shape of frames is (num_frames, window_size, *src.shape[1:]) , where num_frames is (src.shape[0] - window_size) // window_size + 1 . to_frames_using_index ( src , window_size , stride ) np.ndarray \u3092\u30d5\u30ec\u30fc\u30e0\u5206\u3051\u3059\u308b\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u306a\u5b9f\u88c5\u3002 \u5206\u5272\u306b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4f7f\u7528\u3002 Parameters: Name Type Description Default src ndarray splited source. required window_size int sliding window size. required stride int stride is int more than 0. required Returns: Type Description ndarray a shape of frames is (num_frames, window_size, *src.shape[1:]) , where num_frames is (src.shape[0] - window_size) // stride + 1 . to_frames_using_nptricks ( src , window_size , stride ) np.ndarray \u3092\u30d5\u30ec\u30fc\u30e0\u5206\u3051\u3059\u308b\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u306a\u5b9f\u88c5\u3002 \u5206\u5272\u306b np.lib.stride_tricks.as_strided \u95a2\u6570\u3092\u4f7f\u7528\u3002 Parameters: Name Type Description Default src ndarray splited source. required window_size int sliding window size. required stride int stride is int more than 0. required Returns: Type Description ndarray a shape of frames is (num_frames, window_size, *src.shape[1:]) , where num_frames is (src.shape[0] - window_size) // stride + 1 . split_using_sliding_window ( segment , ** options ) segment \u3092\u30d5\u30ec\u30fc\u30e0\u5206\u3051\u3059\u308b\u3002 \u5404\u30b7\u30a7\u30fc\u30d7\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002 segment: (segment_size, ch) frames: (num_frames, window_size, ch) ch \u306f\u3044\u304f\u3089\u3067\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u30e9\u30d9\u30eb\u3092 ch \u306b\u8ffd\u52a0\u3057\u3066\u304a\u3051\u3070\u30e9\u30d9\u30eb\u3082\u30d5\u30ec\u30fc\u30e0\u5206\u3051\u3067\u304d\u308b\u3002 Parameters: Name Type Description Default segments np.ndarray \u5206\u5272\u5bfe\u8c61\u306e\u30c7\u30fc\u30bf\u3002 len(segment.shape) == 2 \u3067\u3042\u308b\u3053\u3068\u3002 required window_size int, default=512 \u30d5\u30ec\u30fc\u30e0\u5206\u3051\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b5\u30a4\u30ba required stride int, default=None None \u306f window_size \u3068\u306a\u308b\u3002 required ftrim int, default=5 \u6700\u521d\u306e {ftrim} \u30b5\u30f3\u30d7\u30eb\u3092\u3068\u3070\u3059 required btrim int, default=5 \u6700\u5f8c\u306e {btrim} \u30b5\u30f3\u30d7\u30eb\u3092\u3068\u3070\u3059 required return_error_value None \u30a8\u30e9\u30fc\u306e\u6642\u306e\u8fd4\u308a\u5024 required Returns: Type Description ndarray \u30d5\u30ec\u30fc\u30e0\u5206\u3051\u3057\u305f\u7d50\u679c\u3002\u5931\u6557\u3057\u305f\u3089 None \u3092\u8fd4\u3059 split_using_target ( src , target ) target \u306e\u30c7\u30fc\u30bf\u3092\u5143\u306b src \u306e\u5206\u5272\u3092\u884c\u3046\u3002 1 2 3 tgt = np . array ([ 0 , 0 , 1 , 1 , 2 , 2 , 1 ]) src = np . array ([ 1 , 2 , 3 , 4 , 5 , 6 , 7 ]) assert split_from_target ( src , tgt ) == { 0 : [ np . array ([ 1 , 2 ])], 1 : [ np . array ([ 3 , 4 ]), np . array ([ 7 ])], 2 : [ np . array ([ 5 , 6 ])]} Parameters: Name Type Description Default src ndarray \u5206\u5272\u3059\u308b\u30c7\u30fc\u30bf required target ndarray \u30e9\u30d9\u30eb\u30c7\u30fc\u30bf\uff08\u4e00\u6b21\u5143\u914d\u5217\uff09 required Returns: Type Description Dict[int, List[numpy.ndarray]] key \u306f\u30e9\u30d9\u30eb\u3001value \u306f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8\u3002 interpolate ( src , rate , kind = 'linear' , axis =- 1 ) interpolation function. (use scipy.interpolate.interp1d) example: (linear interpolation) 1 2 [0, 2, 4] - x2 -> [0, 1, 2, 3, 4] [0, 3, 6] - x3 -> [0, 1, 2, 3, 4, 5, 6] Parameters: Name Type Description Default src ndarray interpolation source. required rate int rate. required kind str Specifies the kind of interpolation as a string (\u2018linear\u2019, \u2018nearest\u2019, \u2018zero\u2019, \u2018slinear\u2019, \u2018quadratic\u2019, \u2018cubic\u2019, \u2018previous\u2019, \u2018next\u2019, where \u2018zero\u2019, \u2018slinear\u2019, \u2018quadratic\u2019 and \u2018cubic\u2019 refer to a spline interpolation of zeroth, first, second or third order; \u2018previous\u2019 and \u2018next\u2019 simply return the previous or next value of the point) or as an integer specifying the order of the spline interpolator to use. Default is \u2018linear\u2019. 'linear' axis int Specifies the axis of y along which to interpolate. Interpolation defaults to the last axis of y. -1 Returns: Type Description ndarray shape[axis] - 1 == rate * ft.shape[axis] pickle_dump ( obj , path ) object dump using pickle. Parameters: Name Type Description Default obj Any any object. required path Union[str, pathlib.Path] save path. required pickle_load ( path ) object load using pickle. Parameters: Name Type Description Default path Path a saved object pickle path. required","title":"sensorutils.core"},{"location":"refs/core.html#sensorutilscore","text":"Under construction...","title":"sensorutils.core"},{"location":"refs/core.html#sensorutils.core.to_frames","text":"np.ndarray \u3092\u30d5\u30ec\u30fc\u30e0\u5206\u3051\u3059\u308b\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u306a\u5b9f\u88c5\u3002 Parameters: Name Type Description Default src ndarray splited source. required window_size int sliding window size. required stride int stride is int more than 0. required stride_mode str 'index' or 'nptrick'. it is used to_frames_* method when window_size != stride. 'index' Returns: Type Description ndarray a shape of frames is (num_frames, window_size, *src.shape[1:]) , where num_frames is (src.shape[0] - window_size) // stride + 1 .","title":"to_frames()"},{"location":"refs/core.html#sensorutils.core.to_frames_using_reshape","text":"np.ndarray \u3092\u30d5\u30ec\u30fc\u30e0\u5206\u3051\u3059\u308b\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u306a\u5b9f\u88c5\u3002 \u5206\u5272\u306b reshape \u3092\u4f7f\u7528\u3002 Parameters: Name Type Description Default src ndarray splited source. required window_size int sliding window size. stride = window_size. required Returns: Type Description ndarray a shape of frames is (num_frames, window_size, *src.shape[1:]) , where num_frames is (src.shape[0] - window_size) // window_size + 1 .","title":"to_frames_using_reshape()"},{"location":"refs/core.html#sensorutils.core.to_frames_using_index","text":"np.ndarray \u3092\u30d5\u30ec\u30fc\u30e0\u5206\u3051\u3059\u308b\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u306a\u5b9f\u88c5\u3002 \u5206\u5272\u306b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4f7f\u7528\u3002 Parameters: Name Type Description Default src ndarray splited source. required window_size int sliding window size. required stride int stride is int more than 0. required Returns: Type Description ndarray a shape of frames is (num_frames, window_size, *src.shape[1:]) , where num_frames is (src.shape[0] - window_size) // stride + 1 .","title":"to_frames_using_index()"},{"location":"refs/core.html#sensorutils.core.to_frames_using_nptricks","text":"np.ndarray \u3092\u30d5\u30ec\u30fc\u30e0\u5206\u3051\u3059\u308b\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u306a\u5b9f\u88c5\u3002 \u5206\u5272\u306b np.lib.stride_tricks.as_strided \u95a2\u6570\u3092\u4f7f\u7528\u3002 Parameters: Name Type Description Default src ndarray splited source. required window_size int sliding window size. required stride int stride is int more than 0. required Returns: Type Description ndarray a shape of frames is (num_frames, window_size, *src.shape[1:]) , where num_frames is (src.shape[0] - window_size) // stride + 1 .","title":"to_frames_using_nptricks()"},{"location":"refs/core.html#sensorutils.core.split_using_sliding_window","text":"segment \u3092\u30d5\u30ec\u30fc\u30e0\u5206\u3051\u3059\u308b\u3002 \u5404\u30b7\u30a7\u30fc\u30d7\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002 segment: (segment_size, ch) frames: (num_frames, window_size, ch) ch \u306f\u3044\u304f\u3089\u3067\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u30e9\u30d9\u30eb\u3092 ch \u306b\u8ffd\u52a0\u3057\u3066\u304a\u3051\u3070\u30e9\u30d9\u30eb\u3082\u30d5\u30ec\u30fc\u30e0\u5206\u3051\u3067\u304d\u308b\u3002 Parameters: Name Type Description Default segments np.ndarray \u5206\u5272\u5bfe\u8c61\u306e\u30c7\u30fc\u30bf\u3002 len(segment.shape) == 2 \u3067\u3042\u308b\u3053\u3068\u3002 required window_size int, default=512 \u30d5\u30ec\u30fc\u30e0\u5206\u3051\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b5\u30a4\u30ba required stride int, default=None None \u306f window_size \u3068\u306a\u308b\u3002 required ftrim int, default=5 \u6700\u521d\u306e {ftrim} \u30b5\u30f3\u30d7\u30eb\u3092\u3068\u3070\u3059 required btrim int, default=5 \u6700\u5f8c\u306e {btrim} \u30b5\u30f3\u30d7\u30eb\u3092\u3068\u3070\u3059 required return_error_value None \u30a8\u30e9\u30fc\u306e\u6642\u306e\u8fd4\u308a\u5024 required Returns: Type Description ndarray \u30d5\u30ec\u30fc\u30e0\u5206\u3051\u3057\u305f\u7d50\u679c\u3002\u5931\u6557\u3057\u305f\u3089 None \u3092\u8fd4\u3059","title":"split_using_sliding_window()"},{"location":"refs/core.html#sensorutils.core.split_using_target","text":"target \u306e\u30c7\u30fc\u30bf\u3092\u5143\u306b src \u306e\u5206\u5272\u3092\u884c\u3046\u3002 1 2 3 tgt = np . array ([ 0 , 0 , 1 , 1 , 2 , 2 , 1 ]) src = np . array ([ 1 , 2 , 3 , 4 , 5 , 6 , 7 ]) assert split_from_target ( src , tgt ) == { 0 : [ np . array ([ 1 , 2 ])], 1 : [ np . array ([ 3 , 4 ]), np . array ([ 7 ])], 2 : [ np . array ([ 5 , 6 ])]} Parameters: Name Type Description Default src ndarray \u5206\u5272\u3059\u308b\u30c7\u30fc\u30bf required target ndarray \u30e9\u30d9\u30eb\u30c7\u30fc\u30bf\uff08\u4e00\u6b21\u5143\u914d\u5217\uff09 required Returns: Type Description Dict[int, List[numpy.ndarray]] key \u306f\u30e9\u30d9\u30eb\u3001value \u306f\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8\u3002","title":"split_using_target()"},{"location":"refs/core.html#sensorutils.core.interpolate","text":"interpolation function. (use scipy.interpolate.interp1d) example: (linear interpolation) 1 2 [0, 2, 4] - x2 -> [0, 1, 2, 3, 4] [0, 3, 6] - x3 -> [0, 1, 2, 3, 4, 5, 6] Parameters: Name Type Description Default src ndarray interpolation source. required rate int rate. required kind str Specifies the kind of interpolation as a string (\u2018linear\u2019, \u2018nearest\u2019, \u2018zero\u2019, \u2018slinear\u2019, \u2018quadratic\u2019, \u2018cubic\u2019, \u2018previous\u2019, \u2018next\u2019, where \u2018zero\u2019, \u2018slinear\u2019, \u2018quadratic\u2019 and \u2018cubic\u2019 refer to a spline interpolation of zeroth, first, second or third order; \u2018previous\u2019 and \u2018next\u2019 simply return the previous or next value of the point) or as an integer specifying the order of the spline interpolator to use. Default is \u2018linear\u2019. 'linear' axis int Specifies the axis of y along which to interpolate. Interpolation defaults to the last axis of y. -1 Returns: Type Description ndarray shape[axis] - 1 == rate * ft.shape[axis]","title":"interpolate()"},{"location":"refs/core.html#sensorutils.core.pickle_dump","text":"object dump using pickle. Parameters: Name Type Description Default obj Any any object. required path Union[str, pathlib.Path] save path. required","title":"pickle_dump()"},{"location":"refs/core.html#sensorutils.core.pickle_load","text":"object load using pickle. Parameters: Name Type Description Default path Path a saved object pickle path. required","title":"pickle_load()"},{"location":"refs/datasets.html","text":"sensorutils.datasets Under construction... hasc hasc challenge hasc \u8aad\u307f\u8fbc\u307f\u95a2\u6570 HASC HASC HASC\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8(HASC-PAC2016)\u306e\u884c\u52d5\u5206\u985e\u3092\u884c\u3046\u305f\u3081\u306e\u30ed\u30fc\u30c0\u30af\u30e9\u30b9 load ( self , window_size , stride , ftrim = 0 , btrim = 0 , queries = None , y_labels = 'activity' ) HASC\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u3068sliding-window Parameters: Name Type Description Default window_size int \u30d5\u30ec\u30fc\u30e0\u5206\u3051\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b5\u30a4\u30ba required stride int \u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u79fb\u52d5\u5e45 required ftrim int \u30bb\u30b0\u30e1\u30f3\u30c8\u5148\u982d\u306e\u30c8\u30ea\u30df\u30f3\u30b0\u30b5\u30a4\u30ba 0 btrim int \u30bb\u30b0\u30e1\u30f3\u30c8\u672b\u5c3e\u306e\u30c8\u30ea\u30df\u30f3\u30b0\u30b5\u30a4\u30ba 0 queries dict \u30e1\u30bf\u60c5\u5831\u306b\u57fa\u3065\u3044\u3066\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3092\u884c\u3046\u305f\u3081\u306e\u30af\u30a8\u30ea\u3002 Key\u306f\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306e\u30e9\u30d9\u30eb(Supported: Frequency, Height, Weight) Value\u306f\u30af\u30a8\u30ea\u6587\u5b57\u5217(DataFrame.query\u306b\u6e96\u62e0) e.g. \u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30ec\u30fc\u30c8\u304c100Hz and \u8eab\u9577\u304c170cm\u3088\u308a\u5927\u304d\u3044 and \u4f53\u91cd\u304c100kg\u4ee5\u4e0a\u3067\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0 queries = { 'Frequency': 'Frequency == 100', # \u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30ec\u30fc\u30c8\u304c100Hz\u306e\u30c7\u30fc\u30bf\u306e\u307f\u3092\u53d6\u5f97 'Height': 'Height > 170', # \u8eab\u9577\u304c170cm\u3088\u308a\u5927\u304d\u3044\u4eba 'Weight': 'Weight >= 100', # \u4f53\u91cd\u304c100kg\u4ee5\u4e0a\u306e\u4eba } None y_labels Union[str, list] \u30bf\u30fc\u30b2\u30c3\u30c8\u30c7\u30fc\u30bf\u3068\u3057\u3066\u30ed\u30fc\u30c9\u3059\u308b\u30c7\u30fc\u30bf\u306e\u7a2e\u985e\u3092\u6307\u5b9a\uff0e \u30b5\u30dd\u30fc\u30c8\u3059\u308b\u7a2e\u985e\u306f\u4ee5\u4e0b\u306e\u901a\u308a(\u4eca\u5f8c\u62e1\u5f35\u4e88\u5b9a)\uff0e 'activity' 'frequency' 'gender' 'height' 'weight' 'person' 'activity' Returns: Type Description tuple sliding-window\u3067\u5207\u308a\u51fa\u3057\u305f\u5165\u529b\u3068\u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u30d5\u30ec\u30fc\u30e0\u30ea\u30b9\u30c8 load ( path , meta ) HASC \u306e\u884c\u52d5\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u95a2\u6570\u3002 \u4e88\u3081 meta \u3092\u8aad\u307f\u8fbc\u3080\u5fc5\u8981\u304c\u3042\u308b\u3002 pd.DataFrame \u306e itertuple \u304c\u9806\u5e8f\u3092\u5b88\u3063\u3066\u3044\u305f\u306f\u305a\u306a\u306e\u3067\u3001 \u8fd4\u3059\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8\u306e\u9806\u756a\u306f meta \u30d5\u30a1\u30a4\u30eb\u3068\u4e00\u81f4\u3059\u308b\u3002 Parameters: Name Type Description Default path Path BasicActivity \u304c\u3042\u308b HASC \u306e\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9 required meta DataFrame load_meta \u95a2\u6570\u3067\u8fd4\u3055\u308c\u305f meta \u30d5\u30a1\u30a4\u30eb required Returns: Type Description List[pandas.core.frame.DataFrame] \u884c\u52d5\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8\u3002 load_meta ( path ) HASC \u306e meta \u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u3002 Parameters: Name Type Description Default path Path HASC \u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3002BasicActivity \u306e\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3002 required Returns: Type Description DataFrame meta \u30d5\u30a1\u30a4\u30eb\u306e DataFrame\u3002 ucihar UCIHAR load ( self , train = True , person_list = None , include_gravity = True ) Sliding-Window\u3092\u30ed\u30fc\u30c9 Parameters: Name Type Description Default train bool select train data or test data. if True then return train data. True person_list Optional[list] specify persons. None include_gravity bool select whether or not include gravity information. True Returns: Type Description tuple sliding-windows load ( path , train = True , include_gravity = False ) UCIHAR \u306e \u30bb\u30f3\u30b5\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080 Parameters: Name Type Description Default path Path UCIHAR \u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3002train\u3084test\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u3042\u308b\u30d1\u30b9\u3092\u6307\u5b9a\u3059\u308b required train bool train == True then load train data train == False then load test data True include_gravity bool \u59ff\u52e2\u60c5\u5831(\u7b2c0\u5468\u6ce2\u6570\u6210\u5206)\u3092\u542b\u3080\u304b\u306e\u30d5\u30e9\u30b0 False load_meta ( path ) UCIHAR \u306e meta \u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080 Parameters: Name Type Description Default path Path UCIHAR \u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3002train\u3084test\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u3042\u308b\u30d1\u30b9\u3092\u6307\u5b9a\u3059\u308b required Returns: Type Description dict train\u3068test\u306emeta\u60c5\u5831 wisdm WISDM load ( self , window_size = None , stride = None , ftrim_sec = 3 , btrim_sec = 3 , subjects = None ) WISDM\u306e\u8aad\u307f\u8fbc\u307f\u3068sliding-window Parameters: Name Type Description Default window_size int \u30d5\u30ec\u30fc\u30e0\u5206\u3051\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b5\u30a4\u30ba None stride int \u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u79fb\u52d5\u5e45 None ftrim_sec int \u30bb\u30b0\u30e1\u30f3\u30c8\u5148\u982d\u306e\u30c8\u30ea\u30df\u30f3\u30b0\u30b5\u30a4\u30ba(\u5358\u4f4d\u306f\u79d2) 3 btrim_sec int \u30bb\u30b0\u30e1\u30f3\u30c8\u672b\u5c3e\u306e\u30c8\u30ea\u30df\u30f3\u30b0\u30b5\u30a4\u30ba(\u5358\u4f4d\u306f\u79d2) 3 subjects Optional[list] \u30ed\u30fc\u30c9\u3059\u308b\u88ab\u9a13\u8005\u3092\u6307\u5b9a None Returns: Type Description tuple sliding-window\u3067\u5207\u308a\u51fa\u3057\u305f\u5165\u529b\u3068\u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u30d5\u30ec\u30fc\u30e0\u30ea\u30b9\u30c8 load ( dataset_path ) WISDM\u306e\u8aad\u307f\u8fbc\u307f Parameters: Name Type Description Default dataset_path Path WISDM\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea(data\u30c7\u30a3\u30ec\u30af\u30c8\u30ea) required Returns: Type Description list segments. This is splited by subjects and activities. unimib Sampling_Rate UniMib\u306e\u57fa\u672c\u30c7\u30fc\u30bf\u69cb\u9020 x_data.mat (x\u306facc or adl or fall): 1 2 3 4 shape: (Number of frames, 1d-vector contained x, y and z axes) \u3059\u3067\u306bsliding-window\u306b\u3088\u3063\u3066\u30d5\u30ec\u30fc\u30e0\u306b\u5206\u3051\u3089\u308c\u305f\u30c7\u30fc\u30bf\u304c\u683c\u7d0d\u3055\u308c\u3066\u304a\u308a\uff0c axis=1\u3067\u306fx, y, z\u8ef8\u306e\u30c7\u30fc\u30bf\u304c\u9023\u7d50\u3055\u308c\u3066\u3044\u308b\uff0e window_size = 151 x_labels.mat: 1 2 shape: (Number of frames, 3) \u884c\u52d5\u30e9\u30d9\u30eb\uff0c\u88ab\u9a13\u8005\u30e9\u30d9\u30eb\uff0c\u8a66\u884c\u30e9\u30d9\u30eb(\u4f55\u56de\u76ee\u306e\u8a66\u884c\u304b\uff1f)\u304c\u9806\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\uff0e x_names.mat: 1 2 3 shape: (2, 17) In axis 0, first item is class description, second item is class name. The number of classes is 17. acc or others UniMib\u306edata\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u306f\u5927\u304d\u304f\u5206\u3051\u3066acc, adl, fall\u306e3\u7a2e\u985e\u306e\u30c7\u30fc\u30bf\u304c\u3042\u308b\uff0e full\u3068\u3044\u3046\u306e\u3082\u3042\u308b\u304c\u69cb\u9020\u306f\u4e0d\u660e\uff0e \u7c21\u6f54\u306b\u8aac\u660e\u3059\u308b\u3068\uff0cUniMib\u3067\u306facc = adl + fall\u3067\u3042\u308b\uff0e UniMib load ( self , data_type , window_size = None , stride = None , ftrim_sec = 3 , btrim_sec = 3 , subjects = None ) UniMib\u306e\u8aad\u307f\u8fbc\u307f\u3068sliding-window Parameters: Name Type Description Default data_type str \u30ed\u30fc\u30c9\u3059\u308b\u30c7\u30fc\u30bf\u306e\u7a2e\u985e(adl, fall, full, raw)\u3092\u9078\u629e\uff0e full = adl + fall\uff0e raw\u306f\u516c\u5f0f\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u524d\u51e6\u7406\u6e08\u307f\u30c7\u30fc\u30bf\u3067\u306f\u306a\u3044\u771f\u306eraw\u30c7\u30fc\u30bf\u3092\u6271\u3046\uff0e required window_size Optional[int] \u30d5\u30ec\u30fc\u30e0\u5206\u3051\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b5\u30a4\u30ba None stride Optional[int] \u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u79fb\u52d5\u5e45 None ftrim_sec int \u30bb\u30b0\u30e1\u30f3\u30c8\u5148\u982d\u306e\u30c8\u30ea\u30df\u30f3\u30b0\u30b5\u30a4\u30ba(\u5358\u4f4d\u306f\u79d2) 3 btrim_sec int \u30bb\u30b0\u30e1\u30f3\u30c8\u672b\u5c3e\u306e\u30c8\u30ea\u30df\u30f3\u30b0\u30b5\u30a4\u30ba(\u5358\u4f4d\u306f\u79d2) 3 subjects Optional[list] \u30ed\u30fc\u30c9\u3059\u308b\u88ab\u9a13\u8005\u3092\u6307\u5b9a None Returns: Type Description tuple sliding-window\u3067\u5207\u308a\u51fa\u3057\u305f\u5165\u529b\u3068\u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u30d5\u30ec\u30fc\u30e0\u30ea\u30b9\u30c8 y_frames\u306f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u5185\u306e\u5024\u3092\u305d\u306e\u307e\u307e\u8fd4\u3059\u305f\u3081\uff0c\u5206\u985e\u3067\u7528\u3044\u308b\u969b\u306f\u30e9\u30d9\u30eb\u306e\u518d\u5272\u308a\u5f53\u3066\u304c\u5fc5\u8981\u3068\u306a\u308b\u3053\u3068\u306b\u6ce8\u610f load ( dataset_path , data_type = 'full' ) UniMib SHAR\u306e\u8aad\u307f\u8fbc\u307f Parameters: Name Type Description Default dataset_path Path UniMib SHAR\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea(data\u30c7\u30a3\u30ec\u30af\u30c8\u30ea) required data_type str \u30ed\u30fc\u30c9\u3059\u308b\u30c7\u30fc\u30bf\u306e\u7a2e\u985e\u3092\u6307\u5b9a 'full': segmented sensor data which contain all activities 'adl' : segmented sensor data which contain ADL activities 'fall': segmented sensor data which contain fall activities 'raw' : raw sensor data (not segmented, all activities) 'full' Returns: Type Description dict sensor data and labels(not relabeld) format: {'acceleration': , 'activity': , 'subject': , 'trial': }","title":"sensorutils.datasets"},{"location":"refs/datasets.html#sensorutilsdatasets","text":"Under construction...","title":"sensorutils.datasets"},{"location":"refs/datasets.html#sensorutils.datasets.hasc","text":"hasc challenge hasc \u8aad\u307f\u8fbc\u307f\u95a2\u6570","title":"hasc"},{"location":"refs/datasets.html#sensorutils.datasets.hasc.HASC","text":"HASC HASC\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8(HASC-PAC2016)\u306e\u884c\u52d5\u5206\u985e\u3092\u884c\u3046\u305f\u3081\u306e\u30ed\u30fc\u30c0\u30af\u30e9\u30b9","title":"HASC"},{"location":"refs/datasets.html#sensorutils.datasets.hasc.HASC.load","text":"HASC\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u3068sliding-window Parameters: Name Type Description Default window_size int \u30d5\u30ec\u30fc\u30e0\u5206\u3051\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b5\u30a4\u30ba required stride int \u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u79fb\u52d5\u5e45 required ftrim int \u30bb\u30b0\u30e1\u30f3\u30c8\u5148\u982d\u306e\u30c8\u30ea\u30df\u30f3\u30b0\u30b5\u30a4\u30ba 0 btrim int \u30bb\u30b0\u30e1\u30f3\u30c8\u672b\u5c3e\u306e\u30c8\u30ea\u30df\u30f3\u30b0\u30b5\u30a4\u30ba 0 queries dict \u30e1\u30bf\u60c5\u5831\u306b\u57fa\u3065\u3044\u3066\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3092\u884c\u3046\u305f\u3081\u306e\u30af\u30a8\u30ea\u3002 Key\u306f\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306e\u30e9\u30d9\u30eb(Supported: Frequency, Height, Weight) Value\u306f\u30af\u30a8\u30ea\u6587\u5b57\u5217(DataFrame.query\u306b\u6e96\u62e0) e.g.","title":"load()"},{"location":"refs/datasets.html#sensorutils.datasets.hasc.HASC.load--100hz-and-170cm-and-100kg","text":"queries = { 'Frequency': 'Frequency == 100', # \u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30ec\u30fc\u30c8\u304c100Hz\u306e\u30c7\u30fc\u30bf\u306e\u307f\u3092\u53d6\u5f97 'Height': 'Height > 170', # \u8eab\u9577\u304c170cm\u3088\u308a\u5927\u304d\u3044\u4eba 'Weight': 'Weight >= 100', # \u4f53\u91cd\u304c100kg\u4ee5\u4e0a\u306e\u4eba } None y_labels Union[str, list] \u30bf\u30fc\u30b2\u30c3\u30c8\u30c7\u30fc\u30bf\u3068\u3057\u3066\u30ed\u30fc\u30c9\u3059\u308b\u30c7\u30fc\u30bf\u306e\u7a2e\u985e\u3092\u6307\u5b9a\uff0e \u30b5\u30dd\u30fc\u30c8\u3059\u308b\u7a2e\u985e\u306f\u4ee5\u4e0b\u306e\u901a\u308a(\u4eca\u5f8c\u62e1\u5f35\u4e88\u5b9a)\uff0e 'activity' 'frequency' 'gender' 'height' 'weight' 'person' 'activity' Returns: Type Description tuple sliding-window\u3067\u5207\u308a\u51fa\u3057\u305f\u5165\u529b\u3068\u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u30d5\u30ec\u30fc\u30e0\u30ea\u30b9\u30c8","title":"\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30ec\u30fc\u30c8\u304c100Hz and \u8eab\u9577\u304c170cm\u3088\u308a\u5927\u304d\u3044 and \u4f53\u91cd\u304c100kg\u4ee5\u4e0a\u3067\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0"},{"location":"refs/datasets.html#sensorutils.datasets.hasc.load","text":"HASC \u306e\u884c\u52d5\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u95a2\u6570\u3002 \u4e88\u3081 meta \u3092\u8aad\u307f\u8fbc\u3080\u5fc5\u8981\u304c\u3042\u308b\u3002 pd.DataFrame \u306e itertuple \u304c\u9806\u5e8f\u3092\u5b88\u3063\u3066\u3044\u305f\u306f\u305a\u306a\u306e\u3067\u3001 \u8fd4\u3059\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8\u306e\u9806\u756a\u306f meta \u30d5\u30a1\u30a4\u30eb\u3068\u4e00\u81f4\u3059\u308b\u3002 Parameters: Name Type Description Default path Path BasicActivity \u304c\u3042\u308b HASC \u306e\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9 required meta DataFrame load_meta \u95a2\u6570\u3067\u8fd4\u3055\u308c\u305f meta \u30d5\u30a1\u30a4\u30eb required Returns: Type Description List[pandas.core.frame.DataFrame] \u884c\u52d5\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8\u3002","title":"load()"},{"location":"refs/datasets.html#sensorutils.datasets.hasc.load_meta","text":"HASC \u306e meta \u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u3002 Parameters: Name Type Description Default path Path HASC \u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3002BasicActivity \u306e\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3002 required Returns: Type Description DataFrame meta \u30d5\u30a1\u30a4\u30eb\u306e DataFrame\u3002","title":"load_meta()"},{"location":"refs/datasets.html#sensorutils.datasets.ucihar","text":"","title":"ucihar"},{"location":"refs/datasets.html#sensorutils.datasets.ucihar.UCIHAR","text":"","title":"UCIHAR"},{"location":"refs/datasets.html#sensorutils.datasets.ucihar.UCIHAR.load","text":"Sliding-Window\u3092\u30ed\u30fc\u30c9 Parameters: Name Type Description Default train bool select train data or test data. if True then return train data. True person_list Optional[list] specify persons. None include_gravity bool select whether or not include gravity information. True Returns: Type Description tuple sliding-windows","title":"load()"},{"location":"refs/datasets.html#sensorutils.datasets.ucihar.load","text":"UCIHAR \u306e \u30bb\u30f3\u30b5\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080 Parameters: Name Type Description Default path Path UCIHAR \u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3002train\u3084test\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u3042\u308b\u30d1\u30b9\u3092\u6307\u5b9a\u3059\u308b required train bool train == True then load train data train == False then load test data True include_gravity bool \u59ff\u52e2\u60c5\u5831(\u7b2c0\u5468\u6ce2\u6570\u6210\u5206)\u3092\u542b\u3080\u304b\u306e\u30d5\u30e9\u30b0 False","title":"load()"},{"location":"refs/datasets.html#sensorutils.datasets.ucihar.load_meta","text":"UCIHAR \u306e meta \u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080 Parameters: Name Type Description Default path Path UCIHAR \u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3002train\u3084test\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u3042\u308b\u30d1\u30b9\u3092\u6307\u5b9a\u3059\u308b required Returns: Type Description dict train\u3068test\u306emeta\u60c5\u5831","title":"load_meta()"},{"location":"refs/datasets.html#sensorutils.datasets.wisdm","text":"","title":"wisdm"},{"location":"refs/datasets.html#sensorutils.datasets.wisdm.WISDM","text":"","title":"WISDM"},{"location":"refs/datasets.html#sensorutils.datasets.wisdm.WISDM.load","text":"WISDM\u306e\u8aad\u307f\u8fbc\u307f\u3068sliding-window Parameters: Name Type Description Default window_size int \u30d5\u30ec\u30fc\u30e0\u5206\u3051\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b5\u30a4\u30ba None stride int \u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u79fb\u52d5\u5e45 None ftrim_sec int \u30bb\u30b0\u30e1\u30f3\u30c8\u5148\u982d\u306e\u30c8\u30ea\u30df\u30f3\u30b0\u30b5\u30a4\u30ba(\u5358\u4f4d\u306f\u79d2) 3 btrim_sec int \u30bb\u30b0\u30e1\u30f3\u30c8\u672b\u5c3e\u306e\u30c8\u30ea\u30df\u30f3\u30b0\u30b5\u30a4\u30ba(\u5358\u4f4d\u306f\u79d2) 3 subjects Optional[list] \u30ed\u30fc\u30c9\u3059\u308b\u88ab\u9a13\u8005\u3092\u6307\u5b9a None Returns: Type Description tuple sliding-window\u3067\u5207\u308a\u51fa\u3057\u305f\u5165\u529b\u3068\u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u30d5\u30ec\u30fc\u30e0\u30ea\u30b9\u30c8","title":"load()"},{"location":"refs/datasets.html#sensorutils.datasets.wisdm.load","text":"WISDM\u306e\u8aad\u307f\u8fbc\u307f Parameters: Name Type Description Default dataset_path Path WISDM\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea(data\u30c7\u30a3\u30ec\u30af\u30c8\u30ea) required Returns: Type Description list segments. This is splited by subjects and activities.","title":"load()"},{"location":"refs/datasets.html#sensorutils.datasets.unimib","text":"","title":"unimib"},{"location":"refs/datasets.html#sensorutils.datasets.unimib.Sampling_Rate","text":"UniMib\u306e\u57fa\u672c\u30c7\u30fc\u30bf\u69cb\u9020 x_data.mat (x\u306facc or adl or fall): 1 2 3 4 shape: (Number of frames, 1d-vector contained x, y and z axes) \u3059\u3067\u306bsliding-window\u306b\u3088\u3063\u3066\u30d5\u30ec\u30fc\u30e0\u306b\u5206\u3051\u3089\u308c\u305f\u30c7\u30fc\u30bf\u304c\u683c\u7d0d\u3055\u308c\u3066\u304a\u308a\uff0c axis=1\u3067\u306fx, y, z\u8ef8\u306e\u30c7\u30fc\u30bf\u304c\u9023\u7d50\u3055\u308c\u3066\u3044\u308b\uff0e window_size = 151 x_labels.mat: 1 2 shape: (Number of frames, 3) \u884c\u52d5\u30e9\u30d9\u30eb\uff0c\u88ab\u9a13\u8005\u30e9\u30d9\u30eb\uff0c\u8a66\u884c\u30e9\u30d9\u30eb(\u4f55\u56de\u76ee\u306e\u8a66\u884c\u304b\uff1f)\u304c\u9806\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\uff0e x_names.mat: 1 2 3 shape: (2, 17) In axis 0, first item is class description, second item is class name. The number of classes is 17. acc or others UniMib\u306edata\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u306f\u5927\u304d\u304f\u5206\u3051\u3066acc, adl, fall\u306e3\u7a2e\u985e\u306e\u30c7\u30fc\u30bf\u304c\u3042\u308b\uff0e full\u3068\u3044\u3046\u306e\u3082\u3042\u308b\u304c\u69cb\u9020\u306f\u4e0d\u660e\uff0e \u7c21\u6f54\u306b\u8aac\u660e\u3059\u308b\u3068\uff0cUniMib\u3067\u306facc = adl + fall\u3067\u3042\u308b\uff0e","title":"Sampling_Rate"},{"location":"refs/datasets.html#sensorutils.datasets.unimib.UniMib","text":"","title":"UniMib"},{"location":"refs/datasets.html#sensorutils.datasets.unimib.UniMib.load","text":"UniMib\u306e\u8aad\u307f\u8fbc\u307f\u3068sliding-window Parameters: Name Type Description Default data_type str \u30ed\u30fc\u30c9\u3059\u308b\u30c7\u30fc\u30bf\u306e\u7a2e\u985e(adl, fall, full, raw)\u3092\u9078\u629e\uff0e full = adl + fall\uff0e raw\u306f\u516c\u5f0f\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u524d\u51e6\u7406\u6e08\u307f\u30c7\u30fc\u30bf\u3067\u306f\u306a\u3044\u771f\u306eraw\u30c7\u30fc\u30bf\u3092\u6271\u3046\uff0e required window_size Optional[int] \u30d5\u30ec\u30fc\u30e0\u5206\u3051\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b5\u30a4\u30ba None stride Optional[int] \u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u79fb\u52d5\u5e45 None ftrim_sec int \u30bb\u30b0\u30e1\u30f3\u30c8\u5148\u982d\u306e\u30c8\u30ea\u30df\u30f3\u30b0\u30b5\u30a4\u30ba(\u5358\u4f4d\u306f\u79d2) 3 btrim_sec int \u30bb\u30b0\u30e1\u30f3\u30c8\u672b\u5c3e\u306e\u30c8\u30ea\u30df\u30f3\u30b0\u30b5\u30a4\u30ba(\u5358\u4f4d\u306f\u79d2) 3 subjects Optional[list] \u30ed\u30fc\u30c9\u3059\u308b\u88ab\u9a13\u8005\u3092\u6307\u5b9a None Returns: Type Description tuple sliding-window\u3067\u5207\u308a\u51fa\u3057\u305f\u5165\u529b\u3068\u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u30d5\u30ec\u30fc\u30e0\u30ea\u30b9\u30c8 y_frames\u306f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u5185\u306e\u5024\u3092\u305d\u306e\u307e\u307e\u8fd4\u3059\u305f\u3081\uff0c\u5206\u985e\u3067\u7528\u3044\u308b\u969b\u306f\u30e9\u30d9\u30eb\u306e\u518d\u5272\u308a\u5f53\u3066\u304c\u5fc5\u8981\u3068\u306a\u308b\u3053\u3068\u306b\u6ce8\u610f","title":"load()"},{"location":"refs/datasets.html#sensorutils.datasets.unimib.load","text":"UniMib SHAR\u306e\u8aad\u307f\u8fbc\u307f Parameters: Name Type Description Default dataset_path Path UniMib SHAR\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea(data\u30c7\u30a3\u30ec\u30af\u30c8\u30ea) required data_type str \u30ed\u30fc\u30c9\u3059\u308b\u30c7\u30fc\u30bf\u306e\u7a2e\u985e\u3092\u6307\u5b9a 'full': segmented sensor data which contain all activities 'adl' : segmented sensor data which contain ADL activities 'fall': segmented sensor data which contain fall activities 'raw' : raw sensor data (not segmented, all activities) 'full' Returns: Type Description dict sensor data and labels(not relabeld) format: {'acceleration': , 'activity': , 'subject': , 'trial': }","title":"load()"},{"location":"refs/metrics.html","text":"sensorutils.metrics Under construction... Note \u53ef\u80fd\u306a\u3089sklearn.metrics\u3092\u4f7f\u7528\u3057\u305f\u307b\u3046\u304c\u826f\u3044 mae ( true , pred , axis = None ) to calc Mean Absolute Error. 1 rac{1}{N}\\sum_{i=0}^{N} |\\hat{y}_i - y_i| Parameters: Name Type Description Default true ndarray true data. required pred ndarray predicted data. required mape ( true , pred , axis = None ) to calc Mean Absolute Persentage Error. 1 2 rac{100}{N}\\sum_{i=0}^{N} \\left| rac{\\hat{y}_i - y_i}{y_i} ight| Parameters: Name Type Description Default true ndarray true data. required pred ndarray predicted data. required","title":"sensorutils.metrics"},{"location":"refs/metrics.html#sensorutilsmetrics","text":"Under construction... Note \u53ef\u80fd\u306a\u3089sklearn.metrics\u3092\u4f7f\u7528\u3057\u305f\u307b\u3046\u304c\u826f\u3044","title":"sensorutils.metrics"},{"location":"refs/metrics.html#sensorutils.metrics.mae","text":"to calc Mean Absolute Error. 1 rac{1}{N}\\sum_{i=0}^{N} |\\hat{y}_i - y_i| Parameters: Name Type Description Default true ndarray true data. required pred ndarray predicted data. required","title":"mae()"},{"location":"refs/metrics.html#sensorutils.metrics.mape","text":"to calc Mean Absolute Persentage Error. 1 2 rac{100}{N}\\sum_{i=0}^{N} \\left| rac{\\hat{y}_i - y_i}{y_i} ight| Parameters: Name Type Description Default true ndarray true data. required pred ndarray predicted data. required","title":"mape()"},{"location":"refs/stats.html","text":"sensorutils.stats Under construction... Note \u53ef\u80fd\u306a\u3089pandas\u306egoupby\u3084rolling\u95a2\u6570\u3092\u7528\u3044\u305f\u307b\u3046\u304c\u826f\u3044 autocorrelation ( data , k ) \u30e9\u30b0\u304c k \u306e\u81ea\u5df1\u76f8\u95a2\u3092\u6c42\u3081\u308b\u3002 \u6642\u7cfb\u5217\u30c7\u30fc\u30bf $S = \\{s_1, s_2, \\dots, s_n\\}$' \u306b\u5bfe\u3057\u3066\u3001\u30e9\u30b0 \\(k\\) ' \u3068\u3057\u3066 1 rac{\\mathrm{Cov}[s_i, s_{i-k}]}{\\sqrt{\\mathrm{Var}[s_i]\\mathrm{Var}[s_{i-k}]}} Parameters: Name Type Description Default data ndarray \u4e00\u6b21\u5143\u30c7\u30fc\u30bf required k int \u30e9\u30b0 required correlation_rate ( data ) \u76f8\u95a2\u6bd4\u306e\u8a08\u7b97\u3092\u884c\u3046\u3002 \u30ab\u30c6\u30b4\u30ea $c$' \u306b\u304a\u3051\u308b\u30b5\u30f3\u30d7\u30eb\u6570 \\(N_c\\) '\u3001\u5e73\u5747\u5024 $\\mu_c$'\u3001i \u756a\u76ee\u306e\u8981\u7d20 \\(x_{ci}\\) '\u3001\u307e\u305f\u5168\u3066\u306e\u30ab\u30c6\u30b4\u30ea\u3092\u542b\u3081\u305f\u5e73\u5747\u5024 ` \\(\\mu\\) ' \u3068\u3057\u3066, 1 rac{\\sum_C N_c (\\mu_c - \\mu)^2}{\\sum_C \\sum_i^{N_c} (x_{ci} - \\mu_c)^2 + \\sum_C N_c (\\mu_c - \\mu)^2} \u3092\u8a08\u7b97\u3059\u308b\u3002 Parameters: Name Type Description Default data dict key = category val = List[src,...] required cv ( frame , axis = None ) \u5909\u52d5\u4fc2\u6570\u306e\u8a08\u7b97\u3002 Parameters: Name Type Description Default frame ndarray \u8a08\u7b97\u5bfe\u8c61\u306e\u30c7\u30fc\u30bf required axis Optional[int] \u8a08\u7b97\u5bfe\u8c61\u3068\u3059\u308b\u8ef8\u3002 None Returns: Type Description float \u5909\u52d5\u4fc2\u6570","title":"sensorutils.stats"},{"location":"refs/stats.html#sensorutilsstats","text":"Under construction... Note \u53ef\u80fd\u306a\u3089pandas\u306egoupby\u3084rolling\u95a2\u6570\u3092\u7528\u3044\u305f\u307b\u3046\u304c\u826f\u3044","title":"sensorutils.stats"},{"location":"refs/stats.html#sensorutils.stats.autocorrelation","text":"\u30e9\u30b0\u304c k \u306e\u81ea\u5df1\u76f8\u95a2\u3092\u6c42\u3081\u308b\u3002 \u6642\u7cfb\u5217\u30c7\u30fc\u30bf $S = \\{s_1, s_2, \\dots, s_n\\}$' \u306b\u5bfe\u3057\u3066\u3001\u30e9\u30b0 \\(k\\) ' \u3068\u3057\u3066 1 rac{\\mathrm{Cov}[s_i, s_{i-k}]}{\\sqrt{\\mathrm{Var}[s_i]\\mathrm{Var}[s_{i-k}]}} Parameters: Name Type Description Default data ndarray \u4e00\u6b21\u5143\u30c7\u30fc\u30bf required k int \u30e9\u30b0 required","title":"autocorrelation()"},{"location":"refs/stats.html#sensorutils.stats.correlation_rate","text":"\u76f8\u95a2\u6bd4\u306e\u8a08\u7b97\u3092\u884c\u3046\u3002 \u30ab\u30c6\u30b4\u30ea $c$' \u306b\u304a\u3051\u308b\u30b5\u30f3\u30d7\u30eb\u6570 \\(N_c\\) '\u3001\u5e73\u5747\u5024 $\\mu_c$'\u3001i \u756a\u76ee\u306e\u8981\u7d20 \\(x_{ci}\\) '\u3001\u307e\u305f\u5168\u3066\u306e\u30ab\u30c6\u30b4\u30ea\u3092\u542b\u3081\u305f\u5e73\u5747\u5024 ` \\(\\mu\\) ' \u3068\u3057\u3066, 1 rac{\\sum_C N_c (\\mu_c - \\mu)^2}{\\sum_C \\sum_i^{N_c} (x_{ci} - \\mu_c)^2 + \\sum_C N_c (\\mu_c - \\mu)^2} \u3092\u8a08\u7b97\u3059\u308b\u3002 Parameters: Name Type Description Default data dict key = category val = List[src,...] required","title":"correlation_rate()"},{"location":"refs/stats.html#sensorutils.stats.cv","text":"\u5909\u52d5\u4fc2\u6570\u306e\u8a08\u7b97\u3002 Parameters: Name Type Description Default frame ndarray \u8a08\u7b97\u5bfe\u8c61\u306e\u30c7\u30fc\u30bf required axis Optional[int] \u8a08\u7b97\u5bfe\u8c61\u3068\u3059\u308b\u8ef8\u3002 None Returns: Type Description float \u5909\u52d5\u4fc2\u6570","title":"cv()"}]}